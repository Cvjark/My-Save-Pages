<html>
<head>
<!-- Generated by the Spirit (http://spirit.sf.net) QuickDoc -->
<!-- 由罗聪(http://www.luocong.com)修改部分源代码，以适应中文的需求。 -->
<title>3. Prefixes - Part I</title>
<link rel="stylesheet" href="theme/style.css" type="text/css">
<link rel="prev" href="2._从哪里开始，到哪里结束.htm">
<link rel="next" href="4._Prefixes_-_Part_II.htm">
</head>
<body>
<table width="100%" height="48" border="0" background="theme/bkd2.gif" cellspacing="2">
  <tr>
    <td width="10">
    </td>
    <td width="85%">
      <font size="6" face="Verdana, Arial, Helvetica, sans-serif"><b>3. Prefixes - Part I</b></font>
    </td>
    <td width="112"><a href="http://spirit.sf.net"><img src="theme/spirit.gif" align="right" border="0"></a></td>
  </tr>
</table>
<br>
<table border="0">
  <tr>
    <td width="30"><a href="../index.htm"><img src="theme/u_arr.gif" title="目录" border="0"></a></td>
    <td width="30"><a href="2._从哪里开始，到哪里结束.htm"><img src="theme/l_arr.gif" title="上一页" border="0"></a></td>
    <td width="20"><a href="4._Prefixes_-_Part_II.htm"><img src="theme/r_arr.gif" title="下一页" border="0"></a></td>
   </tr>
</table>
<blockquote><p><i>To be, or not to be: that is the question.<br><br></i>
-- William Shakespeare, &quot;HAMLET&quot;.</p></blockquote><a name="Hello,_Prefixes!"></a><h2>Hello, Prefixes!</h2><p>
就像经典的“Hello World!”程序一样，让我们也从最简单的一个实例看起：</p>
<table width="90%" border="0" align="center">  <tr>
  <td class="table_title" colspan="6">
OpCode &amp;&amp; mnemonic  </td>
  </tr>
<tr><td class="table_cells"><b>OpCode</b></td><td class="table_cells"><b>mnemonic</b></td></tr><td class="table_cells">40</td><td class="table_cells">INC EAX</td></tr><td class="table_cells">66 40</td><td class="table_cells">INC AX</td></tr></table>
<p>
假设默认的操作数是32位，我们就可以得到上表的结果。（为什么默认是32位？看到后面就会明白的）</p>
<p>
我们可以看到，<tt>40</tt>表示的是<tt>INC EAX</tt>，<tt>66 40</tt>表示的是<tt>INC AX</tt>，两者的分别在于：前者的操作数是32位的(<tt>EAX</tt>)，而后者是16位的(<tt>AX</tt>)。</p>
<p>
从OpCode的角度来看，后者比前者多了一个<tt>66</tt>，就导致了不同的结果，唔……Intel x86规定：</p>
<p>
<b>66</b>是一个<tt>Prefix</tt>，我们把<tt>Prefix</tt>翻译为<tt>前缀</tt>，所谓<tt>前缀</tt>，就是与<tt>code</tt>进行组合用以产生出某些变化形式的“东西”。唔……好拗口啊，真不好解释，请看晕了的朋友不要抛砖头，继续往下阅读吧。 <img src="theme/icon_smile.gif"></img></p>
<a name="认识_Prefixes"></a><h2>认识 Prefixes</h2><p>
回忆一下第一章中介绍的OpCode的6个域：</p>
<ol><li><b>Prefixes</b></li><li>code</li><li>ModR/M</li><li>SIB</li><li>Displacement</li><li>Immediate</li></ol><p>
记住：</p>
<ul><li>在实际的使用中，并不是这所有的6个域都会被用到的，但是有一项却是一定会有的，那就是第2项：<tt>code</tt>，有些指令甚至只会用到<tt>code</tt>这一项。</li><li>这6个域的排列顺序绝对不能乱，必须严格按照上面的顺序进行。有些域也许不会出现，但是只要出现了，编号小的域就绝对不允许出现在编号大的域的后面，反之亦然。</li></ul><p>
<tt>Prefixes</tt>是所有的域中最容易理解的一个，请先明了它的一些特性：</p>
<table width="80%" border="0" align="center">
  <tr>
    <td class="note_box">
<img src="theme/note.gif"></img> <b>Prefixes的几个特性</b><br><br>
1. 它是唯一的一个可能出现在<tt>code</tt><b>之前</b>的域。<br>
2. 所有的<tt>Prefixes</tt>都只有<b>1</b>个字节。<br>
3. 在一个OpCode中可能会有多个<tt>Prefixes</tt>。
    </td>
  </tr>
</table>
<p>
看看刚才提到过的prefix <tt>66</tt>，这个prefix的意思是“切换默认的操作数的大小”。例如在有的系统中有2种默认的操作数大小：<b>16</b>位和<b>32</b>位。操作数有可能会被写成<b>16</b>位或者<b>32</b>位，唯一的区分方法是看它有没有prefix <tt>66</tt>。</p>
<p>
唔……是不是讲得不够清楚呢？我们来看看：</p>
<table width="90%" border="0" align="center">  <tr>
  <td class="table_title" colspan="6">
OpCode &amp;&amp; mnemonic  </td>
  </tr>
<tr><td class="table_cells"><b>OpCode</b></td><td class="table_cells"><b>mnemonic</b></td></tr><td class="table_cells">66 AD</td><td class="table_cells">LODSW</td></tr><td class="table_cells">AD</td><td class="table_cells">LODSD</td></tr></table>
<p>
依然假设默认的操作数是32位的，有没有发现什么不寻常的地方？</p>
<p>
<tt>LODSW</tt>和<tt>LODSD</tt>的<tt>code</tt>域是一样的――都是<tt>AD</tt>！其实，<tt>LODSW</tt>和<tt>LODSD</tt>这两个指令是同一个指令，只不过它们的操作数大小不一样――<tt>LODSW</tt>使用了2个字节（<b>16</b>位）的<tt>WORD</tt>作为操作数，而<tt>LODSD</tt>则使用了4个字节（<b>32</b>位）的<tt>DWORD</tt>作为操作数。</p>
<p>
看到这里，读者应该能够明白了：prefix <tt>66</tt>的作用是<b><u>切换</u></b>默认的操作数大小。请注意我们并没有说“指定”，而是“切换”！反映到这个例子中，就是“切换默认的<b>32</b>位操作数到<b>16</b>位”，而不是“指定操作数的大小为<b>16</b>位”。</p>
<p>
这点非常重要！！！绝对不是在玩文字游戏！！</p>
<p>
如果默认的操作数大小是<tt>WORD</tt>（<b>16</b>位），那么切换后就是<tt>DWORD</tt>（<b>32</b>位）；反之，如果默认的操作数大小是<tt>DWORD</tt>（<b>32</b>位），那么切换后就是<tt>WORD</tt>（<b>16</b>位）。</p>
<p>
<b>切记！Prefixes <tt>66</tt>就像一个触发器一样，起的作用就是进行切换。</b></p>
<p>
让我们再来看一个特例：</p>
<code><pre>
<b>B0 FF</b>    MOV AL, 0FF
<b>8A C1</b>    MOV AL, CL
</pre></code><p>
看清楚了吗？现在的操作数是<tt>AL</tt>和<tt>CL</tt>，加上prefix <tt>66</tt>后会如何？</p>
<code><pre>
<b>66 B0 FF</b>    MOV AL, 0FF
<b>66 8A C1</b>    MOV AL, CL
</pre></code><p>
Faint！没有任何变化！</p>
<p>
为什么呢？我们可以猜测一下：也许并不是所有情况下的操作数大小都可以随意改变的。假如这个改变是不允许的，那么它就会被忽略。</p>
<p>
为了证实这个猜想，让我们来看看下一个更有趣的例子：</p>
<p>
prefix <tt>F3</tt>(rep)的作用是让CPU对随后的指令循环执行<tt>ecx(cx)</tt>次，指令<tt>INC EAX</tt>的OpCode是<tt>40</tt>，好，如果我们想连续执行3次<tt>INC EAX</tt>的话，应该怎么样呢？</p>
<p>
也许你会想当然地认为应该这样写：</p>
<code><pre>
xor eax, eax
mov ecx, 3
<b>rep</b> inc eax
</pre></code><p>
实际上！并不是这样！这样的程序的运行结果是：</p>
<ol><li>没有任何异常（exception）产生。</li><li>最后eax = 1，这意味着prefix <tt>F3</tt>并没有起作用――它被忽略了。</li></ol><p>
现在我们可以证实之前的想法：</p>
<p>
<b><u>如果Prefixes不能对随它之后的OpCode起作用，那么它就会被忽略。</u></b></p>
<p>
再回忆一下之前提到的三个特性：</p>
<ol><li><tt>Prefixes</tt>是唯一的一个可能出现在<tt>code</tt><b>之前</b>的域。</li><li>所有的<tt>Prefixes</tt>都只有<b>1</b>个字节。</li><li>在一个OpCode中可能会有多个<tt>Prefixes</tt>。</li></ol><p>
前面两点应该比较容易理解，让我们来看看第3点是什么意思。</p>
<p>
如果想得到下面的指令：</p>
<code><pre>
REP LODSW
</pre></code><p>
它的OpCode将会是：</p>
<code><pre>
<b>66 F3 AD</b>
</pre></code><p>
解释如下：</p>
<code><pre>
<b>66 AD</b>：LODSW
<b>F3</b>： REP
</pre></code><p>
都是前面讲过的内容，不难吧？只是组合起来使用罢了。</p>
<p>
不过……细心的读者可能会问：为什么要把<tt>66</tt>放在第一位，把<tt>F3</tt>放在第二位呢？把它们的位置调换一下行不行？答案是：行！事实上它也可以写成：</p>
<code><pre>
<b>F3 66 AD</b>
</pre></code><p>
效果是一样的！</p>
<table width="80%" border="0" align="center">
  <tr>
    <td class="note_box">
<img src="theme/note.gif"></img> <b>Prefixes的特性</b><br><br>
<img src="theme/bullet.gif"></img> 一个OpCode中可以有多个Prefixes。<br>
<img src="theme/bullet.gif"></img> 如果有多个Prefixes，那么它们的顺序可以打乱，不会有任何问题。
    </td>
  </tr>
</table>
<p>
最后，我们还可以得出一个推论：</p>
<p>
由于每个Prefixes会多占用1个字节，所以也必定会导致处理器多使用一个指令周期进行解码――无论在时间还是空间上都会造成浪费。因此，我们应该权衡在哪些场合才使用Prefixes，如非必要，应该减少对它的使用。</p>
<a name="Is_it_ALL?"></a><h2>Is it ALL?</h2><p>
Of course not! 由于章节的篇幅问题，Prefixes的进一步讲解会放在后面的章节中继续进行，我们会看到更多的有关Prefixes的信息。</p>
<table border="0">
  <tr>
    <td width="30"><a href="../index.htm"><img src="theme/u_arr.gif" title="目录" border="0"></a></td>
    <td width="30"><a href="2._从哪里开始，到哪里结束.htm"><img src="theme/l_arr.gif" title="上一页" border="0"></a></td>
    <td width="20"><a href="4._Prefixes_-_Part_II.htm"><img src="theme/r_arr.gif" title="下一页" border="0"></a></td>
   </tr>
</table>
<br>
<hr size="1"><table align="center" bordor="0"><tr><td class="copyright">罗聪<br><font size="2"><a href="http://www.luocong.com" target="_blank">www.LuoCong.com</a></font><br><br></td></tr>
<tr><td><font size="2">（注：如果出现链接打不开的情况，请去掉IE浏览器的“<tt><font size="2">工具-&gt;Internet选项-&gt;高级-&gt;总是以UTF-8发送URL</font></tt>”前面的勾。谢谢！）</font></td></tr></table>
</body>
</html>
